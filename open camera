import os
import cv2
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import models
from tensorflow.keras.preprocessing.image import img_to_array
from tensorflow.keras.preprocessing import image
from tensorflow.keras.models import load_model
import numpy as np
from datetime import datetime


camera = cv2.VideoCapture(0)

face_detect = cv2.CascadeClassifier("C:\\Users\\user\\haarcascade_frontalface_default.xml")
emotion = keras.models.load_model('C:\\Users\\user\\model_emotion1.h5')
class_label = {0: 'Angry', 1: 'Disgust', 2: 'Fear', 3: 'Happy', 4: 'Sad', 5: 'Surprise', 6: 'Neutral'}



while True:

    ret, frame = camera.read()
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = face_detect.detectMultiScale(gray, 1.3, 5)

    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x + w, y + h), (200, 100, 230), 2)
        gray = gray[y:y + h, x:x + w]
        gray = cv2.resize(gray, (48, 48), interpolation=cv2.INTER_AREA)

        if np.sum([gray]) != 0:
            roi = gray.astype('float') / 255.0
            roi = img_to_array(roi)
            roi = np.expand_dims(roi, axis=0)

            pred = emotion.predict(roi)[0]
            label = class_label[pred.argmax()]
            label_position = (x, y)
            cv2.putText(frame, label, label_position, cv2.FONT_HERSHEY_SIMPLEX, 2, (0, 255, 0), 2, cv2.LINE_AA)



            def markEmo(label):
                with open('emo.csv', 'r+') as f:
                    myDataList = f.readlines()
                    List = []
                    for line in myDataList:
                        entry = line.split(',')
                        List.append(entry[0])
                    if label not in List:
                        now = datetime.now()
                        dtString = now.strftime('%H:%M:%S')
                        f.writelines(f'\n{label},{dtString}')

            markEmo(label)

        else:
            cv2.putText(frame, 'No Face Found', (20, 60), cv2.FONT_HERSHEY_SIMPLEX, 2, (100, 100, 255), 2)
    cv2.imshow("Emotion Detect", frame)

    if cv2.waitKey(3) & 0xff == 27:
        break
camera.release()
cv2.destroyAllWindows()




